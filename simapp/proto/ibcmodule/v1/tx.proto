syntax = "proto3";

package ibcmodule.v1;

option go_package = "github.com/rollchains/spawn/simapp/x/ibcmodule/types";

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";

// Msg defines the 27-interchain-accounts/controller Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // SendTx defines a rpc handler for MsgSendTx.
  rpc SendTx(MsgSendTx) returns (MsgSendTxResponse);
}

// MsgSendTx defines the payload for Msg/SendTx
message MsgSendTx {
    option (cosmos.msg.v1.signer) = "sender";

    option (gogoproto.goproto_getters) = false;

    string sender = 1;

    string source_port = 2;
    string source_channel = 3;
    uint64 timeout_timestamp = 4;

    string some_data = 5;
  }

// MsgSendTxResponse defines the response for MsgSendTx
message MsgSendTxResponse {
    option (gogoproto.goproto_getters) = false;

    uint64 sequence = 1;
}


// ExamplePacketData
message ExamplePacketData {
    string sender = 1;
    string some_data = 2;
}

// Acknowledgement
message Acknowledgement {
    // response
    oneof response {
        bytes result = 21;
        string error = 22;
    }
}
