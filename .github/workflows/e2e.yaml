# E2E builds spawn, then uses it and performs validations against it.
name: "E2E"

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: 1.21.0
  JQ_VERSION: '1.7'
  JQ_FORCE: false
  BIN_NAME: appd

jobs:
  chain1:
    runs-on: ubuntu-latest
    name: Test Spawn Chain
    steps:
      - uses: actions/checkout@v4

      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2
        with:
          version: '${{ env.JQ_VERSION }}'
          force: '${{ env.JQ_FORCE }}'

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build Spawn
        run: make install

      - name: Build Chain
        run: |
            spawn new chain1 --bypass-prompt --bech32=roll --bin=${{env.BIN_NAME}} --no-git --org=rollchains --denom=uroll --debug
            cd chain1
            go mod tidy
            go test ./...
            make install
            echo "Installed Appd"

      - name: Run Chain
        run: cd chain1 && HOME_DIR="~/.simapp" CHAIN_ID="local-1" BLOCK_TIME="2000ms" CLEAN=true sh scripts/test_node.sh &

      - name: Validate Running
        run: sleep 20 && ${{env.BIN_NAME}} status --output=json | jq -r 'has("sync_info")' | grep true