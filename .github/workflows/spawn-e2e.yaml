# E2E builds spawn, then uses it and performs validations against it.
name: "E2E"

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: 1.22.3
  JQ_VERSION: '1.7'
  JQ_FORCE: false

# TODO: add back in ICS, also add other Validations from the GH issue

jobs:
  build-spawn:
    runs-on: ubuntu-latest
    name: Build Spawn
    steps:
      - uses: actions/checkout@v4

      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: Build Spawn
        run: make build

      - uses: actions/upload-artifact@master
        with:
          name: spawn
          path: ./bin/spawn

  # normal-staking:
  #   needs: build-spawn
  #   uses: ./.github/workflows/reusable-e2e.yaml
  #   with:
  #     id: Proof of Stake
  #     spawn-create-cmd: ./spawn new mychain --consensus=proof-of-stake --bypass-prompt --bech32=prefix --bin=appd --no-git --org=rollchains-org --denom=uroll --debug --log-level=debug
  #     start-chain-cmd: HOME_DIR="~/.simapp" CHAIN_ID="localchain-1" BLOCK_TIME="2000ms" CLEAN=true sh scripts/test_node.sh &

  # proof-of-authority:
  #   needs: build-spawn
  #   uses: ./.github/workflows/reusable-e2e.yaml
  #   with:
  #     id: Proof of Authority
  #     spawn-create-cmd: ./spawn new mychain --consensus=proof-of-authority --bypass-prompt --bech32=cosmos --bin=appd --no-git --org=rollchains-org --denom=uroll --debug --log-level=debug
  #     start-chain-cmd: HOME_DIR="~/.simapp" CHAIN_ID="localchain-1" BLOCK_TIME="2000ms" CLEAN=true sh scripts/test_node.sh &

  # normal-ics:
  #   needs: build-spawn
  #   uses: ./.github/workflows/reusable-e2e.yaml
  #   with:
  #     id: ICS - Cosmos Hub
  #     spawn-create-cmd: ./spawn new mychain --consensus=ics --bin=appd --bypass-prompt --bech32=roll --no-git --org=rollchains-org --denom=uroll --debug --log-level=debug
  #     start-chain-cmd: HOME_DIR="~/.icsnetwork" CHAIN_ID="localchain-2" CLEAN=true BLOCK_TIME="2000ms" sh scripts/test_ics_node.sh &

  ics-with-user-modules:
    needs: build-spawn
    uses: ./.github/workflows/reusable-e2e.yaml
    with:
      id: ICS - Module Plugins
      spawn-create-cmd: spawn new mychain --consensus=ics --bin=appd --bypass-prompt --bech32=roll --no-git --org=rollchains-org --denom=uroll --debug --log-level=debug
      spawn-extra-cmd: cd mychain && spawn module new AAAAAAA && spawn module new BBBBB --ibc-middleware && make proto-gen
      start-chain-cmd: HOME_DIR="~/.icsnetwork" CHAIN_ID="localchain-2" CLEAN=true BLOCK_TIME="2000ms" sh scripts/test_ics_node.sh &