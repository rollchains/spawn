"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[221],{3307:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var s=t(5893),a=t(1151);const o={title:"IBC Transfers",sidebar_label:"IBC Transfers",slug:"/demo/ibc"},i="IBC Demo",r={id:"demos/ibc-transfer-demo",title:"IBC Transfers",description:'In this tutorial, we\'ll create and interact with a new Cosmos-SDK blockchain called "rollchain", with the token denomination "uroll". This chain has tokenfactory and Proof of Authority, but we\'ll disable cosmwasm.',source:"@site/versioned_docs/version-v0.50.x/03-demos/01-ibc-transfer-demo.md",sourceDirName:"03-demos",slug:"/demo/ibc",permalink:"/spawn/v0.50/demo/ibc",draft:!1,unlisted:!1,tags:[],version:"v0.50.x",sidebarPosition:1,frontMatter:{title:"IBC Transfers",sidebar_label:"IBC Transfers",slug:"/demo/ibc"},sidebar:"defaultSidebar",previous:{title:"IBC Contract (Part 3)",permalink:"/spawn/v0.50/build/name-service-ibc-contract"},next:{title:"CosmWasm NFTs",permalink:"/spawn/v0.50/demo/cw-nft"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create your chain",id:"create-your-chain",level:2},{value:"Spin up an IBC testnet",id:"spin-up-an-ibc-testnet",level:2},{value:"Send a Transaction",id:"send-a-transaction",level:2},{value:"Send an IBC transaction",id:"send-an-ibc-transaction",level:2},{value:"(optional) Push to GitHub",id:"optional-push-to-github",level:2},{value:"Conclusion",id:"conclusion",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"ibc-demo",children:"IBC Demo"}),"\n",(0,s.jsx)(n.p,{children:'In this tutorial, we\'ll create and interact with a new Cosmos-SDK blockchain called "rollchain", with the token denomination "uroll". This chain has tokenfactory and Proof of Authority, but we\'ll disable cosmwasm.'}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/spawn/v0.50/install/system-setup",children:"System Setup"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/spawn/v0.50/install/install-spawn",children:"Install Spawn"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"create-your-chain",children:"Create your chain"}),"\n",(0,s.jsxs)(n.p,{children:["Create your chain using the spawn command line tool. Change the ",(0,s.jsx)(n.code,{children:"GITHUB_USERNAME"})," to your github username.\nIf you do not have a github, leaving it as default is fine."]}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Proof_of_authority",children:"Proof of Authority"})," network to focus on the application logic rather than worry about the security model. This is a great starting point for new chains."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"GITHUB_USERNAME=rollchains\n\n# If the `--consensus` or `--disabled` flags are not present,\n# a selector UI will appear in your terminal to see all options.\nspawn new rollchain \\\n--consensus=proof-of-authority \\\n--bech32=roll \\\n--denom=uroll \\\n--bin=rolld \\\n--disabled=cosmwasm,block-explorer \\\n--org=${GITHUB_USERNAME}\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"NOTE:"})," ",(0,s.jsx)(n.code,{children:"spawn"})," creates a ready to use repository complete with ",(0,s.jsx)(n.code,{children:"git"})," and GitHub CI. It can be quickly pushed to a new repository getting you and your team up and running quickly."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"spin-up-an-ibc-testnet",children:"Spin up an IBC testnet"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"chains/testnet.json"})," file contains the configuration for the testnet. It is a simple JSON file that contains the chain configurations for the testnet. By default it starts 2 networks, configures a relayer, and connects the two chains via IBC."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd rollchain\n\n# Starts 2 networks for the IBC testnet at http://127.0.0.1:8080.\n# - Builds the docker image of your chain\n# - Launches a testnet with IBC automatically connected and relayed\n#\n# Note: you can run a single node, non IBC testnet, with `make sh-testnet`.\nmake testnet\n"})}),"\n",(0,s.jsx)(n.h2,{id:"send-a-transaction",children:"Send a Transaction"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# list the keys that have been provisioned with funds at launch\nrolld keys list\n\n# send a transaction from one account to another\nrolld tx bank send acc0 $(rolld keys show acc1 -a) 1337uroll --chain-id=localchain-1\n\n# enter "y" to confirm the transaction\n# then query your balances for proof the transaction executed successfully\nrolld q bank balances $(rolld keys show acc1 -a)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"send-an-ibc-transaction",children:"Send an IBC transaction"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# submit a cross chain transfer from acc0 to the other address\nrolld tx ibc-transfer transfer transfer channel-0 cosmos1hj5fveer5cjtn4wd6wstzugjfdxzl0xpxvjjvr 7uroll --from=acc0 --chain-id=localchain-1 --yes\n\n# Query the other side to confirm it went through\nsleep 10\n\n# Interact with the other chain without having to install the cosmos binary\n# - Endpoints found at: GET http://127.0.0.1:8080/info\n# - make get-localic\nlocal-ic interact localcosmos-1 query 'bank balances cosmos1hj5fveer5cjtn4wd6wstzugjfdxzl0xpxvjjvr'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"optional-push-to-github",children:"(optional) Push to GitHub"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Create a new repository on GitHub from the gh cli\ngh repo create rollchain --source=. --remote=upstream --push --private\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["You can also push it the old fashioned way with ",(0,s.jsx)(n.a,{href:"https://github.com/new",children:"https://github.com/new"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"In this tutorial, you configured a new custom chain, launched a testnet for it, tested a cross chain token transfer, and confirmed it was successful. This tutorial demonstrates just how easy it is to create a brand new custom Cosmos-SDK blockchain from scratch with spawn."})]})}function d(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>i});var s=t(7294);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);