"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[838],{8839:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var s=t(5893),l=t(1151);const o={title:"Setup Development Environment",sidebar_label:"System Setup",sidebar_position:1,slug:"/install/system-setup"},i="Overview",a={id:"setup/system-setup",title:"Setup Development Environment",description:"Setup your development environment with the essentials to get started building the blockchain.",source:"@site/versioned_docs/version-v0.50.x/01-setup/01-system-setup.md",sourceDirName:"01-setup",slug:"/install/system-setup",permalink:"/spawn/v0.50/install/system-setup",draft:!1,unlisted:!1,tags:[],version:"v0.50.x",sidebarPosition:1,frontMatter:{title:"Setup Development Environment",sidebar_label:"System Setup",sidebar_position:1,slug:"/install/system-setup"},sidebar:"defaultSidebar",previous:{title:"Spawn Documentation",permalink:"/spawn/v0.50/"},next:{title:"Install Spawn",permalink:"/spawn/v0.50/install/install-spawn"}},r={},c=[{value:"System Requirements",id:"system-requirements",level:2},{value:"Windows",id:"windows",level:2},{value:"MacOS",id:"macos",level:2},{value:"Linux (Ubuntu)",id:"linux-ubuntu",level:2},{value:"CosmWasm",id:"cosmwasm",level:2}];function u(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(e.admonition,{title:"Synopsis",type:"note",children:(0,s.jsx)(e.p,{children:"Setup your development environment with the essentials to get started building the blockchain."})}),"\n",(0,s.jsx)(e.h2,{id:"system-requirements",children:"System Requirements"}),"\n",(0,s.jsx)(e.p,{children:"Before you can install and interact with spawn, you must have the following core tools installed:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://go.dev/doc/install",children:(0,s.jsx)(e.code,{children:"Go 1.22+"})})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.docker.com/get-docker/",children:(0,s.jsx)(e.code,{children:"Docker"})})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://git-scm.com/",children:(0,s.jsx)(e.code,{children:"Git"})})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"If you do not have these components installed, follow the instructions below to install them."}),"\n",(0,s.jsx)(e.h2,{id:"windows",children:"Windows"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'# Install WSL in powershell\nwsl --install\nRestart-Computer\n\n# Setup WSL Ubuntu Image\nwsl.exe --install Ubuntu-24.04\n\n# Open wsl instance\nwsl\n\n# update and add snap if not already installed\nsudo apt update && sudo apt install snapd\n\n# Install Go (Snap)\nsudo snap install go --channel=1.23/stable --classic\n\n# Install Base\nsudo apt install make gcc git jq wget\n\n# Install github-cli\nsudo snap install gh\n\n# Install docker\nhttps://docs.docker.com/desktop/wsl/#turn-on-docker-desktop-wsl-2\n# or snap:\nsudo snap install docker\n\n# Fix versioning for interaction of commands\nsudo chmod 666 /var/run/docker.sock\n\n# Setup base git config\ngit config --global user.email "yourEmail@gmail.com"\ngit config --global user.name "Your Name"\n'})}),"\n",(0,s.jsx)(e.h2,{id:"macos",children:"MacOS"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'# Base\nbrew install make\nbrew install gcc\nbrew install wget\nbrew install jq\n\n# Github CLI - https://github.com/cli/cli\nbrew install gh\ngh auth login\n\n# Golang\nbrew install go\n\n# Docker\nbrew install --cask docker\nopen -a Docker # start docker desktop\n# settings -> General -> Start Docker Desktop when you sign in to your computer\n# Apply & Restart\n\n# Setup base git config\ngit config --global user.email "yourEmail@gmail.com"\ngit config --global user.name "Your Name"\n'})}),"\n",(0,s.jsx)(e.h2,{id:"linux-ubuntu",children:"Linux (Ubuntu)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'# Base\nsudo apt install make gcc git jq wget\n\n# (optional) Github CLI - https://github.com/cli/cli\ncurl -sS https://webi.sh/gh | sh\ngh auth login\n\n# Golang\nGO_VERSION=1.23.0\nwget https://go.dev/dl/go$GO_VERSION.linux-amd64.tar.gz\nsudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go$GO_VERSION.linux-amd64.tar.gz\n\n# Docker\nsudo apt -y install docker.io\n\n# Setup base git config\ngit config --global user.email "yourEmail@gmail.com"\ngit config --global user.name "Your Name"\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cosmwasm",children:"CosmWasm"}),"\n",(0,s.jsxs)(e.p,{children:["Some tutorials require CosmWasm (Rust smart contracts) setup. This section is option, unless a tutorial is CosmWasm focused.\nCosmWasm requires ",(0,s.jsx)(e.a,{href:"https://www.rust-lang.org/",children:"Rust"}),". You must have this installed as the contract will be built locally."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Install rust - https://www.rust-lang.org/tools/install\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n\n# Update shell env\nsource $HOME/.cargo/env\n\n# or Update if you have it\nrustup update\n\n# Install other dependencies\nrustup target add wasm32-unknown-unknown\n\ncargo install cargo-generate --features vendored-openssl\ncargo install cargo-run-script\n"})})]})}function d(n={}){const{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>a,a:()=>i});var s=t(7294);const l={},o=s.createContext(l);function i(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:i(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);